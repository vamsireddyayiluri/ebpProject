rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Function to check if a user is verified
    function isVerifiedUser() {
      return request.auth != null;
    }

    // General rule to deny all by default
    match /{document=**} {
      allow read, write: if false;
    }

    // Specific rules for each collection

    // Booking history collection
    match /booking_history/{document=**} {
      allow read, write: if isVerifiedUser();
    }

    // Bookings collection
    match /bookings/{document=**} {
      allow read, write: if isVerifiedUser();
    }

    // Drafts collection
    match /drafts/{document=**} {
      allow read, write: if isVerifiedUser();
    }

    // Organizations collection
    match /organizations/{document=**} {
      allow read, write: if isVerifiedUser();
    }

    // Pending verifications collection
    match /pending_verifications/{document=**} {
      allow read, write: if isVerifiedUser();
    }

    // Trucker requirements collection
    match /trucker_requirements/{document=**} {
      allow read, write: if isVerifiedUser();
    }

    // Users collection
    match /users/{document=**} {
      allow read;
      allow write: if isVerifiedUser();
    }

		// Invitations collection
    match /invitations/{document=**} {
      allow read;
      allow write: if isVerifiedUser();
    }

    // Notifications collection
    match /notifications/{document=**} {
      allow read, write: if isVerifiedUser();
    }

    // Commitments collection
    match /commitments/{document=**} {
      allow read, write: if isVerifiedUser();
    }
  }
}
